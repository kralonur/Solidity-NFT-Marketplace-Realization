/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200219f3803806200219f833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611e1980620003866000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461018b57806395d89b41146101bb578063a22cb465146101d9578063b88d4fde146101f5578063c87b56dd14610211578063e985e9c514610241576100b4565b806306fdde03146100b9578063081812fc146100d7578063095ea7b31461010757806323b872dd1461012357806342842e0e1461013f5780636352211e1461015b575b600080fd5b6100c1610271565b6040516100ce91906117e4565b60405180910390f35b6100f160048036038101906100ec91906115a5565b610303565b6040516100fe9190611762565b60405180910390f35b610121600480360381019061011c9190611540565b6103e5565b005b61013d6004803603810190610138919061143a565b610558565b005b6101596004803603810190610154919061143a565b610655565b005b610175600480360381019061017091906115a5565b610675565b6040516101829190611762565b60405180910390f35b6101a560048036038101906101a091906113d5565b610757565b6040516101b291906118e6565b60405180910390f35b6101c3610812565b6040516101d091906117e4565b60405180910390f35b6101f360048036038101906101ee9190611504565b6108a4565b005b61020f600480360381019061020a9190611489565b610a10565b005b61022b600480360381019061022691906115a5565b610b0f565b60405161023891906117e4565b60405180910390f35b61025b600480360381019061025691906113fe565b610c59565b60405161026891906117c9565b60405180910390f35b60606000805461028090611acf565b80601f01602080910402602001604051908101604052809291908181526020018280546102ac90611acf565b80156102f95780601f106102ce576101008083540402835291602001916102f9565b820191906000526020600020905b8154815290600101906020018083116102dc57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a090611846565b60405180910390fd5b6005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061050b5750600660006002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190611886565b60405180910390fd5b6105548282610ced565b5050565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f390611846565b60405180910390fd5b61060582610dd1565b610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b906118c6565b60405180910390fd5b61064f848484610f3b565b50505050565b61067083838360405180602001604052806000815250610a10565b505050565b600081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561071b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071290611846565b60405180910390fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c1906118a6565b60405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b60606001805461082190611acf565b80601f016020809104026020016040519081016040528092919081815260200182805461084d90611acf565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b5050505050905090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a90611826565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a0491906117c9565b60405180910390a35050565b81600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab90611846565b60405180910390fd5b610abd83610dd1565b610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906118c6565b60405180910390fd5b610b08858585856111b9565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bac90611846565b60405180910390fd5b600360008481526020019081526020016000208054610bd390611acf565b80601f0160208091040260200160405190810160405280929190818152602001828054610bff90611acf565b8015610c4c5780601f10610c2157610100808354040283529160200191610c4c565b820191906000526020600020905b815481529060010190602001808311610c2f57829003601f168201915b5050505050915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ea257503373ffffffffffffffffffffffffffffffffffffffff166005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610f335750600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915050919050565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa3906118a6565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461104d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104490611866565b60405180910390fd5b6001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461109d91906119e5565b925050819055506001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110f4919061198f565b92505081905550826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611158600083610ced565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6111c4848484610f3b565b6111e38373ffffffffffffffffffffffffffffffffffffffff16611306565b156113005763150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b815260040161124e949392919061177d565b602060405180830381600087803b15801561126857600080fd5b505af115801561127c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a0919061157c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f690611806565b60405180910390fd5b5b50505050565b600080823b905060008111915050919050565b600061132c61132784611926565b611901565b90508281526020810184848401111561134457600080fd5b61134f848285611a8d565b509392505050565b60008135905061136681611d87565b92915050565b60008135905061137b81611d9e565b92915050565b60008151905061139081611db5565b92915050565b600082601f8301126113a757600080fd5b81356113b7848260208601611319565b91505092915050565b6000813590506113cf81611dcc565b92915050565b6000602082840312156113e757600080fd5b60006113f584828501611357565b91505092915050565b6000806040838503121561141157600080fd5b600061141f85828601611357565b925050602061143085828601611357565b9150509250929050565b60008060006060848603121561144f57600080fd5b600061145d86828701611357565b935050602061146e86828701611357565b925050604061147f868287016113c0565b9150509250925092565b6000806000806080858703121561149f57600080fd5b60006114ad87828801611357565b94505060206114be87828801611357565b93505060406114cf878288016113c0565b925050606085013567ffffffffffffffff8111156114ec57600080fd5b6114f887828801611396565b91505092959194509250565b6000806040838503121561151757600080fd5b600061152585828601611357565b92505060206115368582860161136c565b9150509250929050565b6000806040838503121561155357600080fd5b600061156185828601611357565b9250506020611572858286016113c0565b9150509250929050565b60006020828403121561158e57600080fd5b600061159c84828501611381565b91505092915050565b6000602082840312156115b757600080fd5b60006115c5848285016113c0565b91505092915050565b6115d781611a19565b82525050565b6115e681611a2b565b82525050565b60006115f782611957565b611601818561196d565b9350611611818560208601611a9c565b61161a81611bbf565b840191505092915050565b600061163082611962565b61163a818561197e565b935061164a818560208601611a9c565b61165381611bbf565b840191505092915050565b600061166b60328361197e565b915061167682611bd0565b604082019050919050565b600061168e60258361197e565b915061169982611c1f565b604082019050919050565b60006116b160148361197e565b91506116bc82611c6e565b602082019050919050565b60006116d460268361197e565b91506116df82611c97565b604082019050919050565b60006116f7601c8361197e565b915061170282611ce6565b602082019050919050565b600061171a60158361197e565b915061172582611d0f565b602082019050919050565b600061173d602c8361197e565b915061174882611d38565b604082019050919050565b61175c81611a83565b82525050565b600060208201905061177760008301846115ce565b92915050565b600060808201905061179260008301876115ce565b61179f60208301866115ce565b6117ac6040830185611753565b81810360608301526117be81846115ec565b905095945050505050565b60006020820190506117de60008301846115dd565b92915050565b600060208201905081810360008301526117fe8184611625565b905092915050565b6000602082019050818103600083015261181f8161165e565b9050919050565b6000602082019050818103600083015261183f81611681565b9050919050565b6000602082019050818103600083015261185f816116a4565b9050919050565b6000602082019050818103600083015261187f816116c7565b9050919050565b6000602082019050818103600083015261189f816116ea565b9050919050565b600060208201905081810360008301526118bf8161170d565b9050919050565b600060208201905081810360008301526118df81611730565b9050919050565b60006020820190506118fb6000830184611753565b92915050565b600061190b61191c565b90506119178282611b01565b919050565b6000604051905090565b600067ffffffffffffffff82111561194157611940611b90565b5b61194a82611bbf565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061199a82611a83565b91506119a583611a83565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119da576119d9611b32565b5b828201905092915050565b60006119f082611a83565b91506119fb83611a83565b925082821015611a0e57611a0d611b32565b5b828203905092915050565b6000611a2482611a63565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611aba578082015181840152602081019050611a9f565b83811115611ac9576000848401525b50505050565b60006002820490506001821680611ae757607f821691505b60208210811415611afb57611afa611b61565b5b50919050565b611b0a82611bbf565b810181811067ffffffffffffffff82111715611b2957611b28611b90565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4f70657261746f722063616e2774206265207468652066756e6374696f6e206360008201527f616c6c6572000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b7f596f752063616e2774207472616e7366657220736f6d656f6e6520656c73657360008201527f20746f6b656e0000000000000000000000000000000000000000000000000000602082015250565b7f596f752063616e277420617070726f7665207468697320746f6b656e00000000600082015250565b7f416464726573732063616e2774206265206e756c6c0000000000000000000000600082015250565b7f43616c6c6572206973206e6f7420616c6c6f77656420746f207472616e73666560008201527f72207468697320746f6b656e0000000000000000000000000000000000000000602082015250565b611d9081611a19565b8114611d9b57600080fd5b50565b611da781611a2b565b8114611db257600080fd5b50565b611dbe81611a37565b8114611dc957600080fd5b50565b611dd581611a83565b8114611de057600080fd5b5056fea26469706673582212203547df513a5deec2867167b7d8997ceecf0cae55b9128cab980c4a01f9fb1ab164736f6c63430008040033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<ERC721>;
  }
  getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
